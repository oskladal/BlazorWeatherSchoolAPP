@page "/fetchdata"
@layout MainLayout

@using System.Globalization;
@using System.Linq;

<PageTitle>Weather forecast</PageTitle>

@using DBConnect.Models
@inject WeatherDB dataDB

@inject IJSRuntime JS


@using BlazorWeatherSchoolAPP.Source;

<figure class="highcharts-figure">
    <div id="graf1"></div>
    <p class="highcharts-description">
        This chart shows how data labels can be added to the data series. This
        can increase readability and comprehension for small datasets.
    </p>
</figure>



<h1>Meteo aplikace VŠCHT</h1>

<p>This component demonstrates fetching data from a service.</p>

<h1>Vnitřní věličiny teplota/vlhkost/tlak</h1>

<RadzenDataGrid Data="@table_data" TItem="Quantities">
    <Columns>
        <RadzenDataGridColumn TItem="Quantities" Property="Create" Title="Datum">
            <Template Context="table_data">
                @table_data.Created.ToLocalTime()
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities243.temp_in" Title="Teplota WeatherLinkLive" />
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities243.hum_in" Title="Vlhkost WeatherLinkLive" />
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities242.bar_sea_level" Title="Tlak na hladinu moře" />
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities242.bar_trend" Title="Tlaková tendence" />

        <RadzenDataGridColumn TItem="Quantities" Property="Quantities326.temp" Title="Teplota AirLink" />
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities326.hum" Title="Vlhkost Airlink" />
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities326.dew_point" Title="Rosný bod AirLink" />
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities326.heat_index" Title="Heat index Airlink" />
    </Columns>
</RadzenDataGrid>

<h1>TEST TEST </h1>
@if (last_data != null)
{
    <table class="table table-my-value">
        <tr>
            <td colspan="4" class="table-secondary bold-font">Teplota a vlhkost</td>
        </tr>
        <tbody class="table-group-divider ">
            <tr>
                <td>Teplota WeaherLinkLive</td>
                <td>@table_data[0].Quantities243.temp_in °C</td>
                <td>Vlhkost WeatherLinkLive</td>
                <td>@table_data[0].Quantities243.hum_in %</td>
            </tr>
            <tr>
                <td>Teplota AirLink</td>
                <td>@table_data[0].Quantities326.temp °C</td>
                <td>Vlhkost AirLink</td>
                <td>@table_data[0].Quantities326.hum %</td>
            </tr>
            <tr>
                <td>Rosný bod AirLink</td>
                <td>@table_data[0].Quantities326.dew_point °C</td>
                <td>Heat index Airlink</td>
                <td>@table_data[0].Quantities326.heat_index °C</td>
            </tr>
        </tbody>
        <tr>
            <td colspan="4" class="table-secondary bold-font">Tlak</td>
        </tr>
        <tbody class="table-group-divider">
            <tr>
                <td>Tlak na hladině moře</td>
                <td>@table_data[0].Quantities242.bar_sea_level hPa</td>
                <td>Tlaková tendence</td>
                <td>@table_data[0].Quantities242.bar_trend hPa</td>
            </tr>
        </tbody>
        <tr>
            <td colspan="4" class="table-secondary bold-font">Kvalita ovzduší</td>
        </tr>
        <tbody class="table-group-divider">
            <tr>
                <td>PM1</td>
                <td>@table_data[0].Quantities326.pm_1 μg/m&sup3</td>
                <td>PM2,5</td>
                <td>@table_data[0].Quantities326.pm_2p5. μg/m&sup3</td>
            </tr>
            <tr>
                <td>PM10</td>
                <td>@table_data[0].Quantities326.pm_10 μg/m&sup3</td>
                <td class="@color_description">Index kvality ovzduší AQI</td>
                <td class="@color_description">@table_data[0].Quantities326.aqi_val (@translatedText_desc)</td>
            </tr>
            <tr>
                <td>PM10 za 24 hodin</td>
                <td>@table_data[0].Quantities326.pm_10_24_hour μg/m&sup3</td>
                <td>PM2,5 za 24 hodin</td>
                <td>@table_data[0].Quantities326.pm_2p5_24_hour μg/m&sup3</td>
            </tr>
        </tbody>
    </table>
}

<h1>Vnitřní věličiny kvalita ovzduší</h1>
<RadzenDataGrid Data="@table_data" TItem="Quantities">
    <Columns>
        <RadzenDataGridColumn TItem="Quantities" Property="Create" Title="Datum">
            <Template Context="table_data">
                @table_data.Created.ToLocalTime()
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities326.pm_1" Title="PM1" />
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities326.pm_2p5" Title="PM2,5" />
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities326.pm_10" Title="PM10" />
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities326.aqi_val" Title="Index kvality ovzduší AQI" />
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities326.pm_10_24_hour" Title="PM10 za 24 hodin" />
        <RadzenDataGridColumn TItem="Quantities" Property="Quantities326.pm_2p5_24_hour" Title="PM2,5 za 24 hodin" />
    </Columns>
</RadzenDataGrid>



<div class="rz-p-12 rz-text-align-center">
    <MudDateRangePicker @ref="_picker" Label="Vyberte rozsah..." @bind-DateRange="@RozsahDat" AutoClose="@_autoClose" Color="MudBlazor.Color.Success" MinDate="MinMaxDate.Min" MaxDate="MinMaxDate.Max">
        <PickerActions>
            <MudButton Class="mr-auto align-self-start" OnClick="@(() => _picker.Clear())">Vymazat</MudButton>
            <MudButton OnClick="@(() => _picker.Close(false))">Zrušit</MudButton>
            <MudButton Color="MudBlazor.Color.Primary" OnClick="@(() => _picker.Close())">Potvrdit</MudButton>
        </PickerActions>
    </MudDateRangePicker>
    <MudSwitch @bind-Checked="@_autoClose" Color="MudBlazor.Color.Secondary">Automatické uzavření okna</MudSwitch>
</div>


<div class="rz-p-12 rz-text-align-left">
    <RadzenSelectBar @bind-Value=@RozsahDat class="mb-5">
        <Items>
            <RadzenSelectBarItem Text="24h" Value="den" />
            <RadzenSelectBarItem Text="1t" Value="tyden" />
            <RadzenSelectBarItem Text="1m" Value="mesic" />
            <RadzenSelectBarItem Text="1r" Value="rok" />
        </Items>
    </RadzenSelectBar>
</div>

<RadzenChart>
    <RadzenLineSeries Smooth="true" Data="@graph_data" CategoryProperty="Created" Title="Teplota vnitřní" LineType="LineType.Solid" ValueProperty="Quantities243.temp_in" />
    <RadzenLineSeries Smooth="true" Data="@graph_data" CategoryProperty="Created" Title="Teplota hlavní stanice" LineType="LineType.Solid" ValueProperty="Quantities46.temp" />
    <RadzenLineSeries Smooth="true" Data="@graph_data" CategoryProperty="Created" Title="Rosný bod" LineType="LineType.Solid" ValueProperty="Quantities46.dew_point" />
    <RadzenLineSeries Smooth="true" Data="@graph_data" CategoryProperty="Created" Title="Heat index" LineType="LineType.Solid" ValueProperty="Quantities46.heat_index" />
    <RadzenLineSeries Smooth="true" Data="@graph_data" CategoryProperty="Created" Title="Wind chill" LineType="LineType.Solid" ValueProperty="Quantities46.wind_chill" />
    <RadzenLineSeries Smooth="true" Data="@graph_data" CategoryProperty="Created" Title="Teplota vnitřní AirLink" LineType="LineType.Solid" ValueProperty="Quantities326.temp" />
    <RadzenLineSeries Smooth="true" Data="@graph_data" CategoryProperty="Created" Title="Rosný bod vnitřní AirLink" LineType="LineType.Solid" ValueProperty="Quantities326.dew_point" />
    <RadzenLineSeries Smooth="true" Data="@graph_data" CategoryProperty="Created" Title="Heat index vnitřní AirLink" LineType="LineType.Solid" ValueProperty="Quantities326.heat_index" />
    <RadzenLineSeries Smooth="true" Data="@graph_data" CategoryProperty="Created" Title="Teplota půdy" LineType="LineType.Solid" ValueProperty="Quantities56.temp_1" />
    <RadzenValueAxis Formatter="@FormatAsCelsius">
        <RadzenGridLines Visible="true" />
        <RadzenAxisTitle Text="Teplota (°C)" />
    </RadzenValueAxis>
    <RadzenCategoryAxis Formatter="@FormatDate" />
</RadzenChart>


@*<RadzenChart>
    <RadzenColumnSeries Data="@last_data" CategoryProperty="Created" Title="Teplota vnitřní" LineType="LineType.Dashed" ValueProperty="Quantities243.temp_in">
        </RadzenColumnSeries>
        <RadzenColumnSeries Data="@last_data" CategoryProperty="Created" Title="Teplota venkovní" ValueProperty="Quantities46.temp">
        </RadzenColumnSeries>
        <RadzenValueAxis Formatter="@FormatAsCelsius">
            <RadzenGridLines Visible="true" />
            <RadzenAxisTitle Text="Teplota (°C)" />
        </RadzenValueAxis>
    </RadzenChart>*@






@if (last_data != null)
{
    <RadzenArcGauge Style="width: 100%; height: 250px;">
        <RadzenArcGaugeScale Step="20" Min="-20" Max="60" MinorStep="2" Radius="1.5" TickPosition=0 Y="0.9" Margin="0">
            <RadzenArcGaugeScaleValue Value=last_data.Quantities243.temp_in ShowValue=true>
                <Template Context="pointer">
                    <h4>
                        @pointer.Value <sup>°C</sup>
                    </h4>
                </Template>
            </RadzenArcGaugeScaleValue>
        </RadzenArcGaugeScale>
    </RadzenArcGauge>
}


@code {

    public List<Quantities> graph_data;
    public Quantities last_data;
    public Quantities[] table_data;

    public String translatedText_desc;

    public (DateTime? Min, DateTime? Max) MinMaxDate;

    /*---------------------------------------------------------------------------------------*/

    // Datové pole pro volení rozsahu který se má zobrazovat
    private DateRange? rozsahdat;
    public DateRange? RozsahDat { get { return rozsahdat; } set { rozsahdat = value; LoadData(); } }

    // Nastavení pro vizuální prvek
    bool showValue = true;
    double value = 100;
    IEnumerable<GaugeTickPosition> tickPositions = Enum.GetValues(typeof(GaugeTickPosition)).Cast<GaugeTickPosition>();
    GaugeTickPosition tickPosition = GaugeTickPosition.Outside;


    public DateRange? den = new DateRange(DateTime.Now.AddDays(-1).Date, DateTime.Now.Date);
    public DateRange? tyden = new DateRange(DateTime.Now.AddDays(-7).Date, DateTime.Now.Date);
    public DateRange? mesic = new DateRange(DateTime.Now.AddMonths(-1).Date, DateTime.Now.Date);
    public DateRange? rok = new DateRange(DateTime.Now.AddYears(-1).Date, DateTime.Now.Date);

    Timer timer;


    // Načítání dat
    protected override async Task OnInitializedAsync()
    {
        // Načtení dat při prvním spuštění
        timer = new System.Threading.Timer((_) =>
        {

            InvokeAsync(async () =>
            {
            
                await LoadData();
            });
        }, null, 0, 300000);
    }



    // Spouští JS funkci, která renderuje graf
    public async Task RenderCharts(List<Quantities> quantities)
    {
        var chart = GraphsGenerator.BasicGraph(quantities);
        await JS.InvokeAsync<string>("RenderCharts", chart);

    }

    public async Task LoadData()
    {

        // Minimální a maximílní datum pro volení rozsahu
        MinMaxDate = await dataDB.GetMinMaxDate();

        // Data pro graf
        if (rozsahdat == null) { rozsahdat = den; }
        DateTime start = rozsahdat.Start.Value;
        DateTime end = rozsahdat.End.Value.AddHours(23).AddMinutes(59).AddSeconds(59);
        graph_data = await dataDB.GetSensorsData(start, end);


        // Poslední záznam
        last_data = await dataDB.GetLastSensorData();
        table_data = new Quantities[] { last_data };

        // překlad
        translatedText_desc = TranslateText(table_data[0].Quantities326.aqi_desc);


        await RenderCharts(graph_data);

        StateHasChanged();
    }

    private MudDateRangePicker _picker;
    private bool _autoClose;

    // Formátování do podoby stupňů celsia
    string FormatAsCelsius(object value)
    {
        return ((double)value).ToString("0.##") + " °C";
    }

    //Formátování data
    string FormatDate(object value)
    {
        if (value != null)
        {
            return Convert.ToDateTime(value).ToString("dd.MM. HH:mm");
        }

        return string.Empty;
    }

    public String color_description;

    // Překlad description
    string TranslateText(string inputText)
    {
        switch (inputText)
        {
            case "Good":
                color_description = "green_one";
                return "Dobrý";
            case "Fair":
                color_description = "green_two";
                return "Spravedlivý";
            case "Moderate":
                color_description = "yellow";
                return "Mírný";
            case "Poor":
                color_description = "orange";
                return "Špatný";
            case "Very poor":
                color_description = "brown";
                return "Velmi špatný";
            default:
                color_description = "green_one";
                return "Dobré";
        }
    }


    }






