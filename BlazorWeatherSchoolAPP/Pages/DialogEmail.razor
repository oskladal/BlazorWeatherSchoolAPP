@layout MainLayout
@using System.ComponentModel.DataAnnotations
@using System.Net.Mail
@using Microsoft.Extensions.Configuration;

<MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
    <MudDialog>
        <DialogContent>
            <MudTextField T="string" Label="Vložte email" Required="true" RequiredError="Email je povinný!"
                          Validation="@(new EmailAddressAttribute() {ErrorMessage = "Neplatná emailová adresa!"})"
                          @bind-Value="model.Email" Variant="MudBlazor.Variant.Outlined" />
            <MudTextField T="string" Required="true" Label="Vložte dotaz"
                          Variant="MudBlazor.Variant.Outlined" Lines="5" Clearable="true"
                          Validation="@(new Func<string, IEnumerable<string>>(TextStrength))"
                          RequiredError="Toto pole je povinné!"
                          @bind-Value="model.TextField" />
        </DialogContent>
        <DialogActions>
            <MudButton Variant="MudBlazor.Variant.Filled" OnClick="Cancel">Zrušit</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.Delete" Variant="MudBlazor.Variant.Filled" Color="MudBlazor.Color.Secondary" OnClick="@(()=>form.Reset())">Vymazat</MudButton>
            <MudButton EndIcon="@Icons.Material.Filled.Send" Color="MudBlazor.Color.Primary" Disabled="@(!success)">Odeslat Email</MudButton>

        </DialogActions>
    </MudDialog>
</MudForm>




@code {

// Proměnné sloužící pro ukládání stavu vyplněných polí - zda je validní či nikoliv
bool success;
string[] errors = { };
MudForm form;


// Proměnná pro zavření dialogu při kliknutí mimo dialog
bool isDialogOpen = false;

// zde se ukládají data z formuláře
DataTable model = new DataTable();

// Nastavení pro tlačítko cancel/zrušit a zavření po odeslání
[CascadingParameter] MudDialogInstance MudDialog { get; set; }
void Cancel() => MudDialog.Cancel();
void Submit() => MudDialog.Close(DialogResult.Ok(true));

// Podmínka pro vstup do textové pole - omezení vstupu
private IEnumerable<string> TextStrength(string pw)
{
    if (string.IsNullOrWhiteSpace(pw))
    {
        yield return "Toto pole je povinné.";
        yield break;
    }
    if (pw.Length < 40)
        yield return "Text musí být delší než 40 znaků.";
    if (pw.Length > 600)
        yield return "Text nesmí přesahovat 600 znaků";
}

// struktura ukládaných dat z formuláře
public class DataTable
{
    public string Email { get; set; }
    public string TextField { get; set; }
}

    
private void SendEmail(DataTable form, IConfiguration config)
{
    try
    {
        using (MailMessage mail = new MailMessage())
        {
            // Nastavení adresy odesílatele
            mail.From = new MailAddress(config["Email"]);

            // Nastavení adresy příjemce
            mail.To.Add(config["Email"]);

            // Nastavení předmětu zprávy
            mail.Subject = "Dotaz WeatherAplikace VŠCHT";

            // Nastavení obsahu zprávy
            mail.Body = form.TextField + "Z emailu: " + form.Email;

            // Odeslání zprávy
            using (SmtpClient smtpClient = new SmtpClient("smtp.server.com", 587))
            {
                smtpClient.Credentials = new System.Net.NetworkCredential(config["Email"], config["EmailKey"]);
                smtpClient.EnableSsl = true;
                smtpClient.Send(mail);
            }
        }
    }
    catch (Exception)
    {
        throw;
    }
}

}





